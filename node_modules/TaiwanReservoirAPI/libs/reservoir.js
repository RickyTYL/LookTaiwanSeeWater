var request = require('request');
var async = require('async');
var cheerio = require('cheerio');
var moment = require('moment');

var _RESERVOIRGOVURL = 'http://fhy.wra.gov.tw/ReservoirPage_2011/StorageCapacity.aspx';

module.exports = function (callback) {

    async.waterfall([

        /*
         * 得到目前網頁資料的 html
         */
        function (cb){
            request(_RESERVOIRGOVURL, function (error, response, body) {

                if(error){
                    return cb(error);
                }

                cb(null, body);
            });
        },

        /*
         * 解析網頁資料，做成新的 json
         */
        function (html, cb){

            var outputData = [];

            var lastedUpdateTime = moment().format('YYYY-MM-DD HH:mm:ss');

            var $ = cheerio.load(html);

            $('.list').find('tr').each(function (i, elem){

                if(i > 20 || i < 2 || i==19)
                    return;

                var td = $(this).find('td');
                var reservoirName = td.eq(0).text().trim().replace(/(\r\n|\n|\r|\s)/g,'');
                var baseAvailable = td.eq(1).text().trim().replace(/(\r\n|\n|\r|\s)/g,'');
                var daliyTime = td.eq(2).text().trim().replace(/(\r\n|\n|\r|\s)/g,'');
                var daliyRainfall = td.eq(3).text().trim().replace(/(\r\n|\n|\r|\s)/g,'');
                var daliyInflow = td.eq(4).text().trim().replace(/(\r\n|\n|\r|\s)/g,'');
                var daliyOverflow = td.eq(5).text().trim().replace(/(\r\n|\n|\r|\s)/g,'');
                var daliyDetector = td.eq(6).text().trim().replace(/(\r\n|\n|\r|\s)/g,'');

                outputData.push({
                    reservoirName: reservoirName,
                    baseAvailable: baseAvailable,
                    daliyTime: daliyTime,
                    daliyRainfall: daliyRainfall,
                    daliyInflow: daliyInflow,
                    daliyOverflow: daliyOverflow,
                    daliyDetector: daliyDetector,
                    //concentration: concentration,
                    // immediateTime: immediateTime,
                    // immediateLevel: immediateLevel,
                    // immediateStorage: immediateStorage,
                    // immediatePercentage: immediatePercentage,
                    // lastedUpdateTime: lastedUpdateTime
                });
            });

            cb(null, outputData);
        }
    ], function (err, outputData) {

        if (err) {
            return callback(err);
        }

        if (!outputData || outputData.length === 0) {
            return callback(new Error('outputData not found'));
        }


        callback(null, outputData);
    });
};
